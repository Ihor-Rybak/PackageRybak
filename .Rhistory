library(PackageRybak)
graphics = lm(mpg ~ cyl + wt + disp, data = mtcars)
model = lm(mpg ~ cyl + wt + disp, data = mtcars)
graphics = GaussMarkov(model)
df <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/carData/Ginzberg.csv")
model = lm(mpg ~ cyl + wt + disp, data = mtcars)
graphics = GaussMarkov(model)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
detach("package:PackageRybak", unload = TRUE)
library(PackageRybak)
model = lm(mpg ~ cyl + wt + disp, data = mtcars)
graphics = GaussMarkov(model)
library(PackageRybak)
model = lm(mpg ~ cyl + wt + disp, data = mtcars)
graphics = GaussMarkov(model)
data(mtcars)
head(mtcars, 6)
summary(mtcars)
model = lm(mpg ~ cyl + wt + disp, data = mtcars)
graphics = GaussMarkov(model)
library<-c("grid", "gridExtra")
lapply(library, require, character.only=TRUE, warn.conflicts = FALSE, quietly = TRUE)
do.call(grid.arrange, c(GaussMarkov, main="Diagnostic Plots", ncol=3))
lm.model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(lm.model)
library(ggplot2)
lm.model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(lm.model)
require(ggplot2)
GaussMarkov<-function(model){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point()
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col="red", linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
graphics = list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6)
return(graphics)
}
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
GaussMarkov(model)
model = lm(mpg ~ cyl + wt + disp, data = mtcars)
GaussMarkov(model, which=1:6, mfrow=c(3,2))
library(ggplot2)
GaussMarkov <- function(x, ..., which=c(1:3, 5), mfrow=c(1,1)){
require(grid)
df <- fortify(model)
df <- cbind(df, rows=1:nrow(df))
# residuals vs fitted
g1 <- ggplot(df, aes(.fitted, .resid)) +
geom_point() +
geom_smooth(se=FALSE) +
geom_hline(linetype=2, size=.2) +
scale_x_continuous("Fitted Values") +
scale_y_continuous("Residual") +
opts(title="Residuals vs Fitted")
# normal qq
a <- quantile(df$.stdresid, c(0.25, 0.75))
b <- qnorm(c(0.25, 0.75))
slope <- diff(a)/diff(b)
int <- a[1] - slope * b[1]
g2 <- ggplot(df, aes(sample=.resid)) +
stat_qq() +
geom_abline(slope=slope, intercept=int) +
scale_x_continuous("Theoretical Quantiles") +
scale_y_continuous("Standardized Residuals") +
opts(title="Normal Q-Q")
# scale-location
g3 <- ggplot(df, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se=FALSE) +
scale_x_continuous("Fitted Values") +
scale_y_continuous("Root of Standardized Residuals") +
opts(title="Scale-Location")
# cook's distance
g4 <- ggplot(df, aes(rows, .cooksd, ymin=0, ymax=.cooksd)) +
geom_point() + geom_linerange() +
scale_x_continuous("Observation Number") +
scale_y_continuous("Cook's distance") +
opts(title="Cook's Distance")
# residuals vs leverage
g5 <- ggplot(df, aes(.hat, .stdresid)) +
geom_point() +
geom_smooth(se=FALSE) +
geom_hline(linetype=2, size=.2) +
scale_x_continuous("Leverage") +
scale_y_continuous("Standardized Residuals") +
opts(title="Residuals vs Leverage")
# cooksd vs leverage
g6 <- ggplot(df, aes(.hat, .cooksd)) +
geom_point() +
geom_smooth(se=FALSE) +
scale_x_continuous("Leverage") +
scale_y_continuous("Cook's distance") +
opts(title="Cook's dist vs Leverage")
plots <- list(g1, g2, g3, g4, g5, g6)
# making the plots
grid.newpage()
if (prod(mfrow)>1) {
mypos <- expand.grid(1:mfrow[1], 1:mfrow[2])
mypos <- mypos[with(mypos, order(Var1)), ]
pushViewport(viewport(layout = grid.layout(mfrow[1], mfrow[2])))
formatter <- function(.){}
} else {
mypos <- data.frame(matrix(1, length(which), 2))
pushViewport(viewport(layout = grid.layout(1, 1)))
formatter <- function(.) {
.dontcare <- readline("Hit <Return> to see next plot: ")
grid.newpage()
}
}
j <- 1
for (i in which){
formatter()
print(plots[[i]], vp=viewport(layout.pos.row=mypos[j,][1],
layout.pos.col=mypos[j,][2]))
j <- j+1
}
}
source('D:/R_package/PackageRybak/R/GaussMarkov.R')
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model <- lm(y~x)
GaussMarkov(model)
GaussMarkov(model, which=1:6, mfrow=c(3,2))
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model <- lm(y~x)
autoplot(model)
autoplot(model, which=1:6, mfrow=c(3,2))
library(PackageRybak)
detach("package:PackageRybak", unload = TRUE)
library(PackageRybak)
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model <- lm(y~x)
autoplot(model)
autoplot(model, which=1:6, mfrow=c(3,2))
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot(model, which=1:6, mfrow=c(3,2))
autoplot.lm(model, which=1:6, mfrow=c(3,2))
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
autoplot.lm(model, which=1:6, mfrow=c(3,2))
View(graphics)
View(GaussMarkov)
View(lm.model)
View(model)
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model <- lm(y~x)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
lm.model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot(model, which=1:6, mfrow=c(3,2))
autoplot.lm(model, which=1:6, mfrow=c(3,2))
library(ggplot2)
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2)
dv
model<-lm(x~y, data=mtcars)
model<-lm(y ~ x, data=mtcars)
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model <- lm(y~x)
autoplot(model, which=1:6, mfrow=c(3,2))
autoplot.lm(model, which=1:6, mfrow=c(3,2))
autoplot.lm(model, which=1:6, mfrow=c(3,2))
library(PackageRybak)
data(mtcars)
summary(mtcars)
lm.model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
autoplot.lm(lm.model, which=1:6, mfrow=c(3,2))
rlang::last_error()
install.packages("ggfortify")
lm.model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
n <- 100
y <- rnorm(n)
x <- matrix(rnorm(n*4), ncol=4)
model <- lm(y~x)
autoplot(model)
autoplot(model, which=1:6, mfrow=c(3,2))
library(ggfortify)
autoplot.lm(model, which=1:6, mfrow=c(3,2))
detach("package:ggfortify", unload = TRUE)
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(model)
install.packages(c("tibble", "xml2"))
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(model)
library(ggplot2)
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(model)
detach("package:ggplot2", unload = TRUE)
library(PackageRybak)
library(PackageRybak)
library(PackageRybak)
library(PackageRybak)
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(model)
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
GaussMarkov<-GaussMarkov(model)
install.packages("ggplot2")
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
gaussmarkov(model)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
gaussmarkov(model)
library(PackageRybak)
model<-lm(mpg~cyl+disp+hp+drat+wt, data=mtcars)
gaussmarkov(model)
